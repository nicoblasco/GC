@model GuardiaComunal.Models.Act
@using Guardia_Comunal.Helpers
@using Guardia_Comunal.ViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    //HtmlHelper.ClientValidationEnabled = false;
    //HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
}

@{
    string currentController = Html.ViewContext.RouteData.GetRequiredString("controller");
    string extension = "(gif,jpg,jpeg,png,doc,docx,pdf,xls,xlsx)";

}

<style>
    .btn-sm {
        font-size: 12px;
        height: 30px;
        margin-bottom: 3px;
    }


    .ck-sm {
        font-size: 12px;
    }

    .select2 {
        font-size: 12px;
    }

    label {
        font-size: 12px;
    }


    #divExtension {
        color: darkgrey;
        font-size: x-small;
        padding-left: 5px;
    }

    #divLabelExtension {
        display: -webkit-box;
    }

    /*.panel-body {
        padding: 10px;
    }

    .panel-heading {
        padding: 8px;
    }

    .form-group {
        margin-bottom: 8px;
    }

    .panel {
        margin-bottom: 10px;
    }*/

    .sol-container {
        padding: 0px;
    }

    .red {
        color: #a94442;
    }
</style>


@using (Html.BeginForm("Create", "Acts", FormMethod.Post, new { id = "formCreateAct", style = "height:100%", @class = "form-horizontal", enctype = "multipart/form-data" }))


{
    @Html.AntiForgeryToken()

    <div id="page-wrapper">
        <div class="row">
            @if (TempData["message"] != null)
            {
                if (TempData["message"].ToString().Contains("Lo sentimos"))
                {
                    <div>
                        <div class="row">
                            <div class="col-md-6 col-md-offset-3">
                                <div class="alert alert-danger alert-dismissable">
                                    <button id="btndismissable" type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>@TempData["message"]
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div>
                        <div class="row">
                            <div class="col-md-6 col-md-offset-3">
                                <div class="alert alert-success alert-dismissable">
                                    <button id="btndismissable" type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>@TempData["message"]
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            <h1 class="page-header" style="margin: 10px;">Actas</h1>

            <form id="form-create" role="form" class="form-horizontal">
                <div class="col-lg-12">
                    <!-- /.Panel de Datos de Alta -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Datos de Acta
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-sm-2">
                                    <label>Tipo de Acta</label><span class="red"> * </span>
                                    @Html.DropDownListFor(model => model.TipoDeActa, new SelectList(
                                   new List<Object>{
                                                                       new { value = "Oficio" , text = "Oficio"  },
                                                                       new { value = "Documentada" , text = "Documentada" }
                                     },
                                   "value",
                                   "text",
                                    1), new { id = "ddl-tipoActa", name = "ddltipoActa", @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.EstadoVehiculo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-3">
                                    <label>Nro. Acta</label><span class="red"> * </span>
                                    @*<input id="input-NroActa" name="inputNroActa" placeholder="Nro. Acta" class="form-control input-sm" autocomplete="off">*@
                                    @Html.EditorFor(model => model.NroActa, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-NroActa", name = "input-NroActa", placeholder = "Nro. Acta" } })
                                    @Html.ValidationMessageFor(model => model.NroActa, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-3">
                                    <label>Fecha/Hora de Infracción</label><span class="red"> * </span>
                                    @*<input type='text' class="form-control input-sm" name="dtInfraccion" id='dt-Infraccion' />*@
                                    @Html.EditorFor(model => model.FechaInfraccion, new { htmlAttributes = new { @class = "form-control input-sm", id = "dt-Infraccion", name = "dtInfraccion", @type = "datetime" } })
                                    @*@Html.TextBoxFor(model => model.FechaInfraccion, "{0:dd/MM/yyyy HH:mm}", new { @class = "form-control input-sm", id = "dt-Infraccion", name = "dtInfraccion"})*@
                                    @Html.ValidationMessageFor(model => model.FechaInfraccion, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-3">
                                    <label>Tanda</label><span class="red"> * </span>
                                    @Html.EditorFor(model => model.Tanda, new { htmlAttributes = new { @type = "number", @Value = "1", @class = "form-control input-sm", id = "input-Tanda", name = "inputTanda", placeholder = "Tanda" } })
                                    @Html.ValidationMessageFor(model => model.Tanda, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!-- /.Calle y Altura -->
                            <div class="form-group">
                                <div class="col-sm-3">
                                    <label>Barrio</label><span class="red"> * </span>
                                    @Html.EditorFor(model => model.Barrio, new { htmlAttributes = new { @Value = "SIN ASIGNAR", @class = "form-control input-sm", id = "ddlBarrio", name = "ddlBarrio" } })
                                    @Html.EditorFor(model => model.NighborhoodId, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Barrio", name = "inputBarrio", style = "display:none" } })
                                    @Html.ValidationMessageFor(model => model.Barrio, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-sm-3">
                                    <label>Calle</label><span class="red"> * </span>
                                    @*<input id="input-Calle" name="inputCalle" placeholder="Calle" class="form-control input-sm">*@
                                    @Html.EditorFor(model => model.Calle, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Calle", name = "inputCalle", placeholder = "Calle" } })
                                    @Html.EditorFor(model => model.StreetId, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-CalleId", name = "inputCalleId", style = "display:none" } })
                                    @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-2">
                                    <label>Altura</label>
                                    @*<input id="input-Altura" name="inputAltura" placeholder="Altura" class="form-control input-sm" autocomplete="off">*@
                                    @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control input-sm", id = "inputAltura", name = "inputAltura", placeholder = "Altura" } })
                                    @*@Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })*@
                                </div>
                                <div class="col-sm-3">
                                    <label>Entre Calle</label><span class="red"> * </span>
                                    @*<input id="input-EntreCalle" name="inputEntreCalle" placeholder="Entre Calle" class="form-control input-sm">*@
                                    @Html.EditorFor(model => model.EntreCalle, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Calle", name = "inputCalle", placeholder = "Entre Calle" } })
                                    @Html.ValidationMessageFor(model => model.EntreCalle, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-3">
                                    <label>Fecha de Envío al Juzgado</label><span class="red"> * </span>
                                    @*<input type='text' class="form-control input-sm" id="dt-EnvioJuzgado" name="dtEnvioJuzgado" />*@
                                    @Html.EditorFor(model => model.FechaEnvioAlJuzgado, new { htmlAttributes = new { @class = "form-control input-sm", id = "dt-EnvioJuzgado", name = "dtEnvioJuzgado" } })
                                    @Html.ValidationMessageFor(model => model.FechaEnvioAlJuzgado, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    <label id="divLabelExtension">Acta Adjunta <div id="divExtension"> @extension </div> </label>
                                    <div class="input-group input-file" name="fileUploadActa">
                                        <span class="input-group-btn">
                                            <button class="btn btn-default btn-choose btn-sm" type="button">Elegir</button>
                                        </span>
                                        <input id="input-ArchivoActa" name="inputArchivoActa" type="text" class="form-control input-sm" placeholder='Selecciona Acta...' />
                                        @*@Html.EditorFor(model => model.ActaAdjunta, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-ArchivoActa", name = "inputArchivoActa", placeholder = "Selecciona Acta..." } })*@
                                        <span class="input-group-btn">
                                            <button class="btn btn-default btn-reset btn-sm" type="button">Borrar</button>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <label>Fecha/Hora de Carga</label><span class="red"> * </span>
                                    @Html.EditorFor(model => model.FechaCarga, new { htmlAttributes = new { @class = "form-control input-sm", id = "dt-Carga", name = "dtCarga" } })
                                </div>
                                <div class="col-sm-2">
                                    <label>Usuario de Carga</label><span class="red"> * </span>
                                    <input class="form-control input-sm" id="input-Usuario" value="@SessionHelper.GetUserName()" name="inputUsuario" placeholder="Usuario de Carga" type="text" disabled>
                                    @Html.EditorFor(model => model.UsuarioId, new { htmlAttributes = new { @Value = SessionHelper.GetUser(), @class = "form-control input-sm", id = "input-UsuarioId", name = "inputUsuarioId", style = "display:none" } })
                                </div>
                            </div>

                        </div>
                    </div>
                    <!-- /. FIN Panel de Datos de Alta -->
                    <!-- /. Panel de Datos del Infractor -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Datos del Infractor
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-sm-3">
                                    <label>DNI</label><span class="red asterisco"></span>
                                    @*<input id="input-DNI" type="number" name="inputDNI" placeholder="DNI" class="form-control input-sm" autocomplete="off">*@
                                    @Html.EditorFor(model => model.DNI, new { htmlAttributes = new { @type = "number", @class = "form-control input-sm", id = "input-DNI", name = "inputDNI", placeholder = "DNI" } })
                                    @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-3">
                                    <label>Apellido</label><span class="red asterisco"></span>
                                    @*<input id="input-Apellido" name="inputApellido" placeholder="Apellido" class="form-control input-sm" autocomplete="off">*@
                                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Apellido", name = "inputApellido", placeholder = "Apellido" } })
                                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-3">
                                    <label>Nombre</label><span class="red asterisco"></span>
                                    @*<input id="input-Nombre" name="inputNombre" placeholder="Nombre" class="form-control input-sm" autocomplete="off">*@
                                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Nombre", name = "inputNombre", placeholder = "Nombre" } })
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-3">
                                    <label>Nro Licencia</label><span class="red asteriscoLicencia"></span>
                                    @*<input id="input-Licencia" name="inputLicencia" placeholder="Licencia" class="form-control input-sm" autocomplete="off">*@
                                    @Html.EditorFor(model => model.NroLicencia, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Licencia", name = "inputLicencia", placeholder = "Nro Licencia" } })
                                    @Html.ValidationMessageFor(model => model.NroLicencia, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /. FIN Panel de Datos del Infractor -->
                    <!-- /. Panel de Datos de Detalle del Vehiculo -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Detalle del Vehiculo
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-sm-2">
                                    <label>Tipo de Vehiculo</label><span class="red"> * </span>
                                    @Html.DropDownListFor(model => model.VehicleTypeId, new SelectList(ViewBag.listaTipos, "Id", "Descripcion"), htmlAttributes:
     new
     {
         id = "ddlTipoVehiculo",
         @class = "form-control input-sm",
         @onchange = "refreshdropdown(ddlTipoVehiculo,ddlMarca,'GetMarcas')"
     }
     )
                                    @*@Html.EditorFor(model => model.VehicleTypeId, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-TipoVehiculo", name = "inputTipoVehiculo", style = "display:none" } })*@
                                    @Html.ValidationMessageFor(model => model.VehicleTypeId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-2">
                                    <label>Tipo de Dominio</label><span class="red"> * </span>
                                    @Html.DropDownListFor(model => model.DomainId, new SelectList(ViewBag.listaDominios, "Id", "Descripcion"), new { @class = "form-control input-sm" })
                                    @*@Html.EditorFor(model => model.DomainId, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-TipoDominio", name = "inputTipoDominio", style = "display:none" } })*@
                                </div>
                                <div class="col-sm-2">
                                    <label>Dominio</label>
                                    @Html.EditorFor(model => model.Dominio, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-TipoDominio", name = "inputTipoDominio", placeholder = "Dominio" } })
                                    @Html.ValidationMessageFor(model => model.Dominio, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-2">
                                    <label>Marca</label>
                                    @Html.DropDownListFor(model => model.VehicleBrandId, new SelectList(ViewBag.listaMarcas, "Id", "Descripcion"), "Seleccione...", htmlAttributes:
      new
      {
          id = "ddlMarca",
          @class = "form-control input-sm",
          @onchange = "refreshdropdown(ddlMarca,ddlModelo,'GetModelos')"
      }
      )
                                    @*@Html.EditorFor(model => model.VehicleBrandId, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Marca", name = "inputMarca", style = "display:none" } })*@
                                </div>

                                <div class="col-sm-2">
                                    <label>Modelo</label>
                                    @Html.DropDownListFor(model => model.VehicleModelId, new SelectList(ViewBag.listaModelos, "Id", "Descripcion"), "Seleccione...", new { @class = "form-control input-sm", id = "ddlModelo" })
                                    @*@Html.EditorFor(model => model.VehicleModelId, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Modelo", name = "inputModelo", style = "display:none" } })*@
                                </div>
                                <div class="col-sm-2">
                                    <label>Color</label>
                                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control input-sm", id = "inputColor", name = "inputColor", placeholder = "Color" } })
                                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                <div class="col-sm-3">
                                    <label>Nro Motor</label>
                                    @*<input id="input-NroMotor" name="inputNroMotor" placeholder="Nro Motor" class="form-control input-sm" autocomplete="off">*@
                                    @Html.EditorFor(model => model.NroMotor, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-NroMotor", name = "inputNroMotor", placeholder = "Nro Motor" } })
                                </div>
                                <div class="col-sm-3">
                                    <label>Nro Chasis</label>
                                    @*<input id="input-NroChasis" name="inputNroChasis" placeholder="Nro Chasis" class="form-control input-sm" autocomplete="off">*@
                                    @Html.EditorFor(model => model.NroChasis, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-NroChasis", name = "inputNroChasis", placeholder = "Nro Chasis" } })
                                </div>
                                <div class="col-sm-3">
                                    <label>Estado del vehiculo</label>

                                    @*@Html.DropDownListFor(model => model.EstadoVehiculo, new SelectList(
                                new List<Object>{
                                                                    new { value = "No Retenido"  , text = "No Retenido"  },
                                                                    new { value = "Retenido" , text = "Retenido" },
                                                                    new { value = "Liberado" , text = "Liberado"},
                                                                    new { value = "Compactado" , text = "Compactado"}
                                  },
                                "value",
                                "text",
                                 0), new { id = "ddlEstadoVehiculo", @class = "form-control input-sm", disabled = "disabled" })*@
                                    @Html.EditorFor(model => model.EstadoVehiculo, new { htmlAttributes = new { @Value = "No Retenido", @class = "form-control input-sm", id = "ddlEstadoVehiculo" } })
                                </div>
                                <div class="col-sm-3">
                                    <label>Fecha de Estado</label>
                                    @*<input type='text' class="form-control input-sm" id="dt-EstadoVehiculo" name="dtEstadoVehiculo" disabled />*@
                                    @Html.EditorFor(model => model.FechaEstado, new { htmlAttributes = new { @class = "form-control input-sm", id = "dt-EstadoVehiculo", name = "dtEstadoVehiculo" } })
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /. FIN Panel de Detalle del Vehiculo -->
                    <!-- /. Panel de Detalle del Acta -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Detalle del Acta
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-sm-2">
                                    <label>Tipo Agente</label><span class="red"> * </span>
                                    @*<select class="form-control input-sm" id="ddlTipoAgente">
                                    <option value="1">Inspector</option>
                                    <option value="2">Policia</option>
                                </select>*@

                                    @Html.DropDownListFor(model => model.TipoAgente, new SelectList(
       new List<Object>{
                                           new { value = "Inspector" , text = "Inspector"  },
                                           new { value = "Policia" , text = "Policia" }
         },
       "value",
       "text",
        1), new { id = "ddlTipoAgente", @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.TipoAgente, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-3">
                                    <label>Agente</label><span class="red"> * </span>
                                    @Html.DropDownListFor(model => model.InspectorId, new SelectList(ViewBag.listaInspectores, "Id", "FullNameLeg"), "Seleccione...", new { @class = "form-control input-sm", id = "ddlInspector" })
                                    @*@Html.DropDownListFor(model => model.Policia, new SelectList(ViewBag.listaPolicias, "Id", "FullName"), new { @class = "form-control input-sm", id = "ddlPolicia" })*@
                                    @Html.EditorFor(model => model.Policia, new { htmlAttributes = new { @class = "form-control input-sm", id = "ddlPolicia", placeholder = "Policia" } })
                                    <span class="red Requerido2"></span>
                                </div>

                            </div>

                            <div class="form-group">
                                <div class="col-sm-7" style="margin-top: 20px;">
                                    <label class="checkbox-inline">
                                        @*<input id="ck-VehiculoRetenido" name="ckVehiculoRetenido" type="checkbox">Vehiculo Retenido*@
                                        @Html.CheckBoxFor(model => model.VehiculoRetenido, new { htmlAttributes = new { @class = "form-control input-sm", id = "ck-VehiculoRetenido" } })Vehiculo Retenido
                                    </label>
                                    <label class="checkbox-inline">
                                        @*<input id="ck-LicenciaRetenida" name="ckLicenciaRetenida" type="checkbox">Licencia Retenida*@
                                        @Html.CheckBoxFor(model => model.LicenciaRetenida, new { htmlAttributes = new { @class = "form-control input-sm", id = "ck-LicenciaRetenida" } })Licencia Retenida
                                    </label>
                                    <label class="checkbox-inline">
                                        @*<input id="ck-TicketAlcoholemia" name="ckTicketAlcoholemia" type="checkbox">Ticket Alcoholemia*@
                                        @Html.CheckBoxFor(model => model.TicketAlcoholemia, new { htmlAttributes = new { @class = "form-control input-sm", id = "ck-TicketAlcoholemia" } })Ticket Alcoholemia
                                    </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-8">
                                    <label>Resultado Alcoholemia</label><span class="red asteriscoTicket"></span>

                                    @Html.EditorFor(model => model.ResultadoAlcoholemia, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-ResultadoAlcoholemia", placeholder = "Resultado del Ticket de Alcoholemia" } })
                                    @Html.ValidationMessageFor(model => model.ResultadoAlcoholemia, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    <label id="divLabelExtension">Ticket Alcoholemia Adjunto <div id="divExtension"> @extension </div> </label>
                                    <div class="input-group input-file" name="fileUploadTicketAlcoholemiaAdjunto">
                                        <span class="input-group-btn">
                                            <button class="btn btn-default btn-choose btn-sm" type="button">Elegir</button>
                                        </span>
                                        <input id="input-TicketAlcoholemia" name="inputTicketAlcoholemia" type="text" class="form-control input-sm" placeholder='Selecciona el Ticket...' />
                                        <span class="input-group-btn">
                                            <button class="btn btn-default btn-reset btn-sm" type="button">Borrar</button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-8">
                                    <label>Informe</label>
                                    @*<input class="form-control input-sm" id="input-Informe" name="inputInforme" placeholder="Informe del Inspector" type="text">*@
                                    @Html.EditorFor(model => model.Informe, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Informe", placeholder = "Informe del Inspector" } })
                                </div>
                                <div class="col-sm-4">
                                    <label id="divLabelExtension">Informe Adjunto <div id="divExtension"> @extension </div> </label>
                                    <div class="input-group input-file" name="fileInformeAdjunto">
                                        <span class="input-group-btn">
                                            <button class="btn btn-default btn-choose btn-sm" type="button">Elegir</button>
                                        </span>
                                        <input id="input-InformeInspector" name="inputInformeInspector" type="text" class="form-control input-sm" placeholder='Selecciona informe...' />
                                        <span class="input-group-btn">
                                            <button class="btn btn-default btn-reset btn-sm" type="button">Borrar</button>
                                        </span>
                                    </div>


                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-8">
                                    <label>Contravenciones</label><span class="red"> * </span>
                                    @Html.DropDownListFor(model => model.SelectedContraventions, new SelectList(ViewBag.listaContravenciones, "Id", "Descripcion"), new { id = "ddlContravenciones", multiple = "multiple" })
                                    <span class="red Requerido"></span>
                                    @*@Html.DropDownList("ddlContravenciones", new SelectList(ViewBag.listaContravenciones, "Id", "Descripcion"), new { multiple = "multiple" })*@
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-8">
                                    <label>Observaciones</label>
                                    @Html.DropDownListFor(model => model.SelectedObservations, new SelectList(ViewBag.listaObservaciones, "Id", "Descripcion"), new { id = "ddlObservaciones", multiple = "multiple" })
                                    @*@Html.DropDownList("ddlObservaciones", new SelectList(ViewBag.listaObservaciones, "Id", "Descripcion"), new { multiple = "multiple" })*@
                                </div>
                                <div class="col-sm-4">
                                    <label>Detalle</label>
                                    @*<input class="form-control input-sm" id="input-Detalle" name="inputDetalle" placeholder="Detalle" type="text">*@
                                    @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control input-sm", id = "input-Detalle", placeholder = "Detalle" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /. https://pbauerochse.github.io/searchable-option-list/examples.html#basic-usage -->
                    @if (PermissionViewModel.TienePermisoAlta(WindowHelper.GetWindowId("Actas", "Altas")))
                    {
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    }
                </div>
                <!-- /.col-lg-12 -->
            </form>
            <!-- /.form -->
        </div>
        <!-- /.ro -->
    </div>
}
<!-- /#page-wrapper -->
<!-- /#wrapper -->
@section scripts {

    <script>
        //\\\\\\\ JS  retrun message SucccessPost or FailPost
        function SuccessMessage() {
            Lobibox.notify('success', {
                title: 'Exito',
                msg: 'Los cambios se han grabado correctamente.'
            });

            var baseUrl = "@Url.Action("Index","Acts")";
            window.location.href = baseUrl;

        }
        function FailMessage() {
            Lobibox.notify('error', {
                title: 'Error',
                msg: 'Ah ocurrido un error, intente nuevamente.'
            });
        }
    </script>

    <script>
        //jquery how to catch enter key and change event to tab

        //$('input').on("keypress", function (e) {
        //    /* ENTER PRESSED*/
        //    if (e.keyCode == 13) {
        //        /* FOCUS ELEMENT */
        //        var inputs = $(this).parents("form").eq(0).find(":input");
        //        var idx = inputs.index(this);

        //        if (idx == inputs.length - 1) {
        //            inputs[0].select()
        //        } else {
        //            inputs[idx + 1].focus(); //  handles submit buttons
        //            inputs[idx + 1].select();
        //        }
        //        return false;
        //    }
        //});    

        //$('body').on('keydown', 'input, select, textarea', function (e) {
        //    var self = $(this)
        //        , form = self.parents('form:eq(0)')
        //        , focusable
        //        , next
        //        ;
        //    if (e.keyCode == 13) {
        //        focusable = form.find('input,select,button,textarea').filter(':visible');
        //        next = focusable.eq(focusable.index(this) + 1);
        //        if (next.length) {
        //            next.focus();
        //        } else {
        //            form.submit();
        //        }
        //        return false;
        //    }
        //});

    //Desabilito los campos que no voy a usar

        $('#dt-Carga').attr("readonly", "readonly")
        $('#dt-EstadoVehiculo').attr("readonly", "readonly");
        $('#input-Usuario').prop("disabled", true);
        $('#ddlEstadoVehiculo').attr("readonly", "readonly");
       // $('#ddlEstadoVehiculo').prop("disabled", true);
        $('#ddlPolicia').hide();


        $('#ddlTipoAgente').on('change', function () {
            if (this.value === "Inspector") {
                $('#ddlInspector').show();
                $('#ddlPolicia').hide();
                
            }
            else {
                $('#ddlInspector').hide();
                $('#ddlPolicia').show();
            }

        });


        //Seteo el Asterisco de obligatoriedad
        $('#ddl-tipoActa').on('change', function () {
            if (this.value === "Documentada") {
                $('.asterisco').text(' * ');

            }
            else {
                $('.asterisco').text("");
            }

        });


        $('#LicenciaRetenida').on('change', function () {
            if (this.checked) {
                $('.asteriscoLicencia').text(' * ');

            }
            else {
                $('.asteriscoLicencia').text("");
            }

        });

        $('#TicketAlcoholemia').on('change', function () {
            if (this.checked) {
                $('.asteriscoTicket').text(' * ');

            }
            else {
                $('.asteriscoTicket').text("");
            }

        });


        ////Habilito los componentes habilitados para que hagan submit
        //jQuery(function ($) {
        //    $('form').bind('submit', function () {
        //        $(this).find(':input').prop('disabled', false);
        //    });
        //});


    //Cargo las calles y barrios
    var varListaBarrios = @Html.Raw(Json.Encode(ViewBag.listaBarrios));
    var barriosJson = $.parseJSON(varListaBarrios.Data);

    var varListaCalles = @Html.Raw(Json.Encode(ViewBag.listaCalles));
      var callesJson = $.parseJSON(varListaCalles.Data);


    var varListaPolicias = @Html.Raw(Json.Encode(ViewBag.listaPolicias));
        var PoliciasJson = $.parseJSON(varListaPolicias.Data);

    $('#ddlBarrio').autocomplete({
        lookup: barriosJson,
        onSelect: function (suggestion) {
            $("#input-Barrio").val(suggestion.data);
        }
    });

    $('#input-Calle').autocomplete({
        lookup: callesJson,
        onSelect: function (suggestion) {
            $("#input-CalleId").val(suggestion.data);
        }
        });

        $('#ddlPolicia').autocomplete({
            lookup: PoliciasJson
        });


    // Fechas
    $(function () {
        $('#dt-Infraccion').datetimepicker({
            locale: 'en-GB',
            date: new Date(Date.now())
        });
        $('#dt-EnvioJuzgado').datetimepicker({
            locale: 'es',
            date: new Date(Date.now())
        });
        $('#dt-Carga').datetimepicker({
            locale: 'es',
            date: new Date(Date.now())
        });
        $('#dt-EstadoVehiculo').datetimepicker({
            locale: 'es',
            date: new Date(Date.now())
        });
        });

    function refreshdropdown(parent,child, action) {
            // get references to the source and target drop downs html controls
            // These are jquery searches to find the drop down controls

        //var parent = $('#' + parent);
        //var child = $('#' + child);
        var jsUrl = '@Url.Action("action", currentController)'; // ## is the token

        if ($(parent).val() == "")
            {
            $(parent+"  option:eq(0)").prop("selected", true);
                return;
            }
                // find a control with id=Manufacturer
            src = $(parent);

            // find a control with id=Model (you need to add this to your view)
            tgt = $(child);

            // clear drop down
            tgt.empty();

            // Get new model dataset via ajax
            // based on manufacturer
            // The url parameter points at your web method
            $.ajax({
                url: jsUrl.replace('action', action),
                    type: 'POST',
                    data: JSON.stringify({
                        "id": src.val()
                    }),
                    contentType: 'application/json; charset=utf-8;',
                // success is called when dataset returns
                success: function (p) {
                    // Populate with each returned member
                    tgt.append(
                        '<option value>' +
                        "Seleccione..." + '</option>'
                    );
                    $.each(p, function (i, pr) {
                        tgt.append(
                            '<option value="' + pr.Id + '">' +
                            pr.Descripcion + '</option>'
                        );
                    })
                }
            });
        }



        $(function () {
            $('.dropdown-menu a').click(function () {
                console.log($(this).attr('data-value'));
                $(this).closest('.dropdown').find('input.countrycode')
                    .val('(' + $(this).attr('data-value') + ')');
            });
        });

        function bs_input_file() {
            $(".input-file").before(
                function () {
                    if (!$(this).prev().hasClass('input-ghost')) {
                        var element = $("<input type='file' accept='.gif,.jpg,.jpeg,.png,.doc,.docx,.pdf,.xls,.xlsx' class='input-ghost' style='visibility:hidden; height:0'>");
                        element.attr("name", $(this).attr("name"));
                        element.change(function () {
                            element.next(element).find('input').val((element.val()).split('\\').pop());
                        });
                        $(this).find("button.btn-choose").click(function () {
                            element.click();
                        });
                        $(this).find("button.btn-reset").click(function () {
                            element.val(null);
                            $(this).parents(".input-file").find('input').val('');
                        });
                        $(this).find('input').css("cursor", "pointer");
                        $(this).find('input').mousedown(function () {
                            $(this).parents('.input-file').prev().click();
                            return false;
                        });
                        return element;
                    }
                }
            );
        }
        $(function () {
            bs_input_file();
        });

        $(function () {
            // initialize sol
            $('#ddlContravenciones').searchableOptionList({
                maxHeight: '250px',
                showSelectAll: true
            });
            $('#ddlObservaciones').searchableOptionList({
                maxHeight: '250px',
                showSelectAll: true
            });
        });

        function onSuccess(result) {
            //if (result.url) {
            //    window.location.href = result.url;
            //}
            alert("Aca hay que hacer un link");
        }


        $("#input-NroActa").focusout(function () {
            var nroActa = $('#input-NroActa').val();

            if (nroActa != null) {
                var isDuplicate = getDuplicates(0, nroActa);

                if (isDuplicate) {
                    $("#div-loader").hide();
                    Lobibox.notify('warning', {
                        title: 'Cuidado',
                        msg: 'El Numero de Acta ya existe.'
                    });

                    $('#input-NroActa').val(null);
                    return;
                }

            }


        });




        function getDuplicates(pid,pParam)
        {
            var isDuplicate = false;
                $.ajax({
                    type: 'GET',
                    async: false ,
                url: '@Url.Action("GetDuplicates", "Acts")',
                data: {
                    id: pid,
                    nroActa: pParam

                },
                cache: false,
                success: function (result) {
                    if (result.responseCode > 0)
                        isDuplicate= true;
                    else
                        isDuplicate= false;
                }
            });

                return isDuplicate;
        }

        $("#input-DNI").focusout(function () {
            var dniInfractor = $('#input-DNI').val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDatosDelInfractor", "Acts")',
                data: {
                    dni: dniInfractor
                },
                cache: false,
                success: function (result) {
                    $('#input-Nombre').val(result.Nombre);
                    $('#input-Apellido').val(result.Apellido);
                    $('#input-Licencia').val(result.NroLicencia);
                },
                error: function (response) {
                    Lobibox.notify('error', {
                        title: 'Error',
                        msg: 'Ah ocurrido un error, intente nuevamente.'
                    });
                }
            });
        });

        $("#VehiculoRetenido").click(function () {
            if ($(this).is(':checked'))
            {
                $("#ddlEstadoVehiculo").val('Retenido').change();
            }
            else
            {
                $("#ddlEstadoVehiculo").val('No Retenido').change();
            }
        });



    </script>

    <script>

        function validoContravenciones() {
            var valor = true;
            if ($(".sol-selected-display-item").hasClass("sol-selected-display-item")) {
                valor = true;
            }
            else {
                valor = false;
            }

            if (valor)
                $(".Requerido").text("");
            else
                $(".Requerido").text("Requerido");
        }

        function validoAgente() {
            var valor = true;
            if ($('#ddlTipoAgente').val() == 'Inspector') {
                if ($("#ddlInspector").val() == '') {
                    valor = false;
                }
            }
            else {
                if ($("#ddlPolicia").val() == '') {
                    $(".Requerido2").text("");
                    valor = false;
                }
            }

            if (valor)
                $(".Requerido2").text("");
            else
                $(".Requerido2").text("Requerido");

            return valor;
        }

        function validationIsTrue() {
            //Devuelve si tiene alguno seleccionado
            var valor1;
            var valor2;
            valor1 = validoContravenciones();
            valor2 = validoAgente();
            if (valor1 == false || valor2 == false)
                return false;
            else
                return true;

        }

        $("form").submit(function () {
            if (validationIsTrue()) {
                
                return true;
            }
            else {
                
                return false;
            }
        });
    </script>
}
